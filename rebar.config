{minimum_otp_vsn, "21.0"}.

{deps, [
    % {lager, {git, "https://github.com/erlang-lager/lager", {branch, "master"}}}
  {lager, "3.6.2"}
  ,{bifrost, {git, "https://gitlab.com/arknode.io/bifrost.git", {branch, "develop"}}}
]}.

% {erl_opts, [debug_info]}.

{erl_opts, [warn_unused_vars,
            warn_shadow_vars,
            warn_unused_import,
            warn_obsolete_guard,
            debug_info,
            % {lager_extra_sinks, [audit]},
            {parse_transform, lager_transform},
            {lager_truncation_size, 1024000}
        ]}.

{xref_checks, [undefined_function_calls, undefined_functions,
               locals_not_used, deprecated_function_calls,
               warnings_as_errors, deprecated_functions]}.

{relx, [
  {release, {jelu_plugin_test, "0.1.0" }, [jelu_plugin_test, sasl]},
  {sys_config, "./config/shell.config"},
  {vm_args, "./config/vm.args"},
  {dev_mode, false},
  {include_erts, false},
  {extended_start_script, true}
]}.

{profiles,
    [{test, [
        {deps, [ {emqx_ct_helper, {git, "https://github.com/emqx/emqx-ct-helpers", {tag, "v1.2.2"}}}
            %    , {emqx, {git_subdir, "https://github.com/emqx/emqx.git", {branch, "master"}, "apps/emqx"}}

               , {cuttlefish, {git, "https://github.com/emqx/cuttlefish", {tag, "v3.0.0"}}}
            %    , compiler
            %    , crypto
               ]}
    ]}
]}.

{relx, [{release, {jelu_plugin_test, {cmd, "scripts/version"}},
         [jelu_plugin_test
         ,lager
         ]},
        {dev_mode, false},
        {include_erts, true},
        {include_src, false},
        {extended_start_script, true}]}.

{shell, [{config, "config/shell.config"}, {apps, [jelu_plugin_test]}]}.

{cover_enabled, true}.
{cover_opts, [verbose]}.
{cover_export_enabled, true}.

{escript_name, jelu_plugin_test}.
{escript_main_app, jelu_plugin_test}.
%%{escript_emu_args, "%%! -smp true +K true +A 16 +P 200000 -env ERL_MAX_PORTS 100000 -env ERTS_MAX_PORTS 100000\n"}.
{escript_shebang, "#!/usr/bin/env escript\n"}.
{provider_hooks, [{post, [{compile, escriptize}]}]}.
{post_hooks, [{"(linux|darwin|solaris|freebsd|netbsd|openbsd)",
  escriptize,
  "cp $PWD/_build/default/bin/jelu_plugin_test ./jelu_plugin_test"},
  {"win32",
    escriptize,
    "robocopy \"%REBAR_BUILD_DIR%/bin/\" ./ jelu_plugin_test* "
    "/njs /njh /nfl /ndl & exit /b 0"} % silence things
]}.
